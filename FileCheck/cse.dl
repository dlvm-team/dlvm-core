// RUN: dlopt -f %s -p CSE --print-ir | FileCheck %s

// CHECK: CSE: changed

module "test"
stage raw

func @bar: (i32) -> i32 {
    'entry(%x: i32):
    %0.0 = add %x: i32, 1: i32
    %0.1 = add %x: i32, 1: i32
    %0.2 = multiply %0.0: i32, 2: i32
    %0.3 = multiply %0.1: i32, 2: i32
    %0.4 = add 3: i32, %0.2: i32
    %0.5 = add 3: i32, %0.3: i32
    %0.6 = equal %0.4: i32, %0.5: i32
    conditional %0.6: bool then 'then(0: i32) else 'else(1: i32)
    'then(%a: i32):
    %1.0 = add 3: i32, 7: i32
    branch 'cont(%1.0: i32)
    'else(%b: i32):
    %2.0 = add 3: i32, 7: i32
    branch 'cont(%2.0: i32)
    'cont(%c: i32):
    %3.0 = add 3: i32, %0.2: i32
    %3.1 = add %3.0: i32, %c: i32
    return %3.1: i32
}

// CHECK-LABEL: func @bar
// CHECK: %0.0 = add %x: i32, 1: i32
// CHECK-NEXT: %0.1 = multiply %0.0: i32, 2: i32
// CHECK-NEXT: %0.2 = add 3: i32, %0.1: i32
// CHECK-NEXT: %0.3 = equal %0.2: i32, %0.2: i32
// CHECK:  %1.0 = add 3: i32, 7: i32
// CHECK:  %2.0 = add 3: i32, 7: i32
// CHECK:  %3.0 = add %0.2: i32, %c: i32
